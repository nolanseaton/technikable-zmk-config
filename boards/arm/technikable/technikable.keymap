/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1

#define TBLE_ORTHO   true
// #define TBLE_MIT     true
// #define TBLE_DUAL_2U true

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };
&mt { tapping-term-ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };
    
    behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <190>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                hl: homerow_layers {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_LAYERS";
                        #binding-cells = <2>;
                        tapping-term-ms = <190>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&mo>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";
                
        base_layer {
                bindings = <
                        &kp Q         &kp W         &kp E         &kp R         &kp T         &none &none     &kp Y         &kp U         &kp I         &kp O         &kp P
                        &hm LSHFT A   &hm LCTRL S   &hm LALT D    &hm LGUI F    &hl 2 G       &none &none     &hl 2 H       &hm LGUI J    &hm LALT K    &hm LCTRL L   &hm RSHFT SEMI
                        &kp Z         &kp X         &kp C         &kp V         &kp B         &none &none     &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH
                                      &none         &kp GRAVE                   &lt 1 BSPC    &none &none     &lt 1 SPACE                 &kp SQT       &none
                >;
         };

        nav_layer {
                bindings = <
                        &kp ESC       &none         &kp RET        &kp TAB       &kp LPAR     &none &none     &kp RPAR      &none         &kp UP       &none          &none 
                        &kp LSFT      &kp LCTRL     &kp LALT       &kp LGUI      &kp LBKT     &none &none     &kp RBKT      &kp LEFT      &kp DOWN     &kp RIGHT      &none
                        &kp DEL       &none         &none          &none         &none        &none &none     &none         &none         &none        &none          &none
                                      &none         &trans                       &trans       &none &none     &trans                      &trans       &none
                >;
         };

         num_layer {
                bindings = <
                        &kp GRAVE     &none        &none           &sys_reset    &kp LPAR     &none &none      &kp RPAR      &kp N7         &kp N8      &kp N9          &kp EQUAL
                        &trans        &trans       &trans          &trans        &kp LBKT     &none &none      &kp RBKT      &kp N4         &kp N5      &kp N6          &kp MINUS
                        &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2    &bt BT_CLR    &bootloader  &none &none      &kp N0        &kp N1         &kp N2      &kp N3          &kp BSLH
                                      &none        &trans                        &trans       &none &none      &trans                       &trans      &none
                >;
         };

    };
};

