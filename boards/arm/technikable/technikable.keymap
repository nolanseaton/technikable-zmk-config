/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1

#define TBLE_ORTHO   true
// #define TBLE_MIT     true
// #define TBLE_DUAL_2U true

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };
&mt { tapping-term-ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };
    
    behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                hl: homerow_layers {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_LAYERS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&mo>, <&kp>;
                };
        };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 	&kp Q &kp W &kp E &kp R &hl 4 T &none &none &hl 4 Y &kp U &kp I &kp O &kp P
   	&hm LSHFT A &hm LCTRL S &hm LALT D &hm LGUI F &hl 2 G &none &none &hl 1 H &hm LGUI J &hm LALT K &hm LCTRL L &hm RSHFT SEMI
   	&kp Z &kp X &kp C &kp V &hl 3 B &none &none &hl 3 N &kp M &kp COMMA &kp DOT &kp FSLH
        &kp LGUI &lt 3 TAB &lt 1 BSPC &none &none &lt 1 SPACE &lt 3 SQT &kp GRAVE
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
	&kp ESC   &none   &kp RET   &kp TAB    &kp LPAR &none &none        &kp RPAR &none &kp UP &none &kp HOME
   	&kp LSFT &kp LCTRL &kp LALT &kp LGUI &kp LBKT &none &none          &kp RBKT &kp LEFT &kp DOWN &kp RIGHT &kp END
   	&kp DEL    &kp INS    &none   &none   &kp SPACE &none &none     &none &none &none &none &none
                             &trans &trans &trans &none &none           &trans &trans &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
	&kp GRAVE  &none     &none    &none  &kp LPAR &none &none                  &kp RPAR &kp N7 &kp N8 &kp N9 &kp EQUAL
  	&trans &trans &trans &trans &kp LBKT &none &none                           &kp RBKT &kp N4 &kp N5 &kp N6 &kp MINUS
   	&none    &none    &none   &none   &kp SPACE &none &none                    &kp N0   &kp N1 &kp N2 &kp N3 &kp BSLH
                             &trans &trans &trans &none &none                &trans &trans &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
	&kp TILDE &none  &none  &none  &kp LPAR &none &none                        &kp RPAR &kp AMPS &kp ASTRK &kp LPAR  &kp PLUS
   	&trans    &trans &trans &trans &kp LBRC &none &none                        &kp RBRC &kp DLLR &kp PRCNT &kp CARET &kp UNDER
   	&none     &none  &none  &none  &kp SPACE &none &none                       &kp RPAR &kp EXCL &kp AT    &kp HASH  &kp PIPE
                             &trans &trans &trans &none &none                &trans &trans &trans
            >;
        };

    };
};

